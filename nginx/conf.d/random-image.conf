server {
    listen 80 default_server;
    server_name _;  # Catch all server name

    root /var/www/images;

    # Basic security headers
    add_header X-Content-Type-Options "nosniff";
    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-XSS-Protection "1; mode=block";

    location / {
        limit_req zone=one burst=10 nodelay;
        default_type text/html;
        content_by_lua_block {
            -- Generate random query parameter to prevent caching
            math.randomseed(ngx.time() * 1000)
            local random_value = math.random(100000, 999999)

            local page = string.format([[
            <!DOCTYPE html>
            <html>
            <head>
                <title>Random Image</title>
                <style>
                    body {
                        margin: 0;
                        padding: 0;
                        background-color: #000;
                        display: flex;
                        justify-content: center;
                        align-items: center;
                        height: 100vh;
                    }
                    img {
                        display: block;
                        width: 800px;
                        height: 600px;
                        margin: 0 auto;
                        border: none;
                        background: none;
                        object-fit: contain;
                        box-shadow: none;
                    }
                </style>
            </head>
            <body>
                <img src="/random-image?v=%d" alt="Random Image" />
            </body>
            </html>
            ]], random_value)
            ngx.say(page)
        }
    }

    # Serve static files securely (for direct access only)
    location ~ \.(jpg|jpeg|png|gif)$ {
        # No caching for random image display
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires "0";
        try_files $uri =404;
    }
}